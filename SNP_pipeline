#pipeline instructions 
# Pipeline to call variants from raw data from Nanuq
filename='ceratina_filename.txt'
cat $filename | while read -r file
do
sid="$(cut -d'.' -f5 <<<$file)"
java -jar /data3/Trimmomatic-0.36/trimmomatic-0.36.jar PE -threads 36 -phred33 $file"_R1.fastq.gz" $file"_R2.fastq.gz" $sid"_paired_R1.fastq.gz" $sid"_unpaired_R1.fastq.gz" $sid"_paired_R2.fastq.gz" $sid"_unpaired_R2.fastq.gz" ILLUMINACLIP:/usr/local/scripts/ADAPTER.fa:2:30:10 LEADING:20 TRAILING:20 SLIDINGWINDOW:20:25 MINLEN:35
fastqc -t 36 $sid*paired*
ngm -r /data3/ASM165200v1_rename.fa -p -1 $sid"_paired_R1.fastq.gz" -2 $sid"_paired_R2.fastq.gz" -t 36 -b --rg-id $sid --rg-sm $sid --rg-lb PE --rg-pl Illumina -o $sid"_ngm_aligned.bam"
samtools sort $sid"_ngm_aligned.bam" -o $sid"_ngm_aligned_sorted.bam" 
samtools index $sid"_ngm_aligned_sorted.bam"
samtools depth $sid"_ngm_aligned_sorted.bam" > $sid"_depth.txt"
/data3/dova_nanuq_raw_data/qualimap_v2.2.1/qualimap bamqc -bam $sid"_ngm_aligned_sorted.bam" -outfile $sid"_qualimap.pdf" --java-mem-size=4G 
java -jar /usr/local/src/picard-tools-2.1.0/picard.jar MarkDuplicates I=$sid"_ngm_aligned_sorted.bam" O=$sid"_marked_duplicates.bam" M=$sid"_marked_dup_metrics.txt" VALIDATION_STRINGENCY=SILENT MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=1000
samtools index $sid"_marked_duplicates.bam"
#java -jar /usr/local/src/GenomeAnalysisTK.jar -T BaseRecalibrator -nct 36 -R /data3/ASM165200v1_rename.fa -I $sid"_marked_duplicates.bam" --knownSites /data2/Training_set/INDEL_TRAINING_lifted_over.vcf --knownSites /data2/Training_set/SNP_TRAINING_lifted_over.vcf -o $sid".recal.table"
#java -jar /usr/local/src/GenomeAnalysisTK.jar -T PrintReads -R /data3/ASM165200v1_rename.fa -nct 36 -I $sid"_marked_duplicates.bam" -BQSR $sid".recal.table" -o $sid"_BQSR.bam"

#java -jar /usr/local/src/GenomeAnalysisTK.jar -T CallableLoci -R /data3/ASM165200v1_rename.fa -I $sid"_BQSR.bam" -summary $sid"_sum.txt" -o $sid"_callable.bed"

#java -jar /usr/local/src/GenomeAnalysisTK.jar -T HaplotypeCaller -nct 20 -R /data3/ASM165200v1_rename.fa -I $sid"_BQSR.bam" --genotyping_mode DISCOVERY -stand_emit_conf 10 -stand_call_conf 30 --emitRefConfidence GVCF -ploidy 2 -o $sid"_raw_variants.g.vcf"

java -jar /usr/local/src/GenomeAnalysisTK.jar -T HaplotypeCaller -nct 20 -R /data3/ASM165200v1_rename.fa -I $sid"_marked_duplicates.bam" --genotyping_mode DISCOVERY -stand_emit_conf 10 -stand_call_conf 30 --emitRefConfidence GVCF -ploidy 2 -o $sid"_raw_variants.g.vcf"


############ find all SNPS and indels to use for training data 

    #Mar22- run combine GVCF and genotypeGVCF on all samples, selectvariants for SNPs 
    java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar CombineGVCFs -R /data3/ASM165200v1_rename.fa --variant cSoc_01_raw_variants.g.vcf -O cSoc_01_combineGVCF.g.vcf

    java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar GenotypeGVCFs -R /data3/ASM165200v1_rename.fa --variant cSoc_01_combineGVCF.g.vcf -O cSoc_01_genotypeGVCF.g.vcf --allow-old-rms-mapping-quality-annotation-data

    java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar SelectVariants -R /data3/ASM165200v1_rename.fa -V cSoc_01_genotypeGVCF.g.vcf --select-type SNP -O cSoc_01_snp.vcf

    #run combineGVCF on each then genotypeGVCF on each then selectvariant snp or indel on each then bedtools intersect in pairs then all together 


#all filename saved in ceratina_raw_training_snp.txt
cSoc_01
cSoc_02
cSoc_03
cSoc_04
cSoc_05
cSoc_06
cSoc_07
cSoc_08
cSoc_09
cSoc_10
cSol_01
cSol_02
cSol_03
cSol_04
cSol_05
cSol_06
cSol_07
cSol_08
cSol_09
cSol_10

#loop for finding SNPs in each file 

filename='ceratina_raw_training_snp.txt'
cat $filename | while read -r file
do
sid="$(cut -d'.' -f5 <<<$file)"

java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar CombineGVCFs -R /data3/ASM165200v1_rename.fa --variant cSoc_01_raw_variants_BR.g.vcf --variant cSoc_02_raw_variants_BR.g.vcf --variant cSoc_03_raw_variants_BR.g.vcf --variant cSoc_04_raw_variants_BR.g.vcf --variant cSoc_05_raw_variants_BR.g.vcf --variant cSoc_06_raw_variants_BR.g.vcf --variant cSoc_07_raw_variants_BR.g.vcf --variant cSoc_08_raw_variants_BR.g.vcf --variant cSoc_09_raw_variants_BR.g.vcf --variant cSoc_10_raw_variants_BR.g.vcf --variant cSol_01_raw_variants_BR.g.vcf --variant cSol_02_raw_variants_BR.g.vcf --variant cSol_03_raw_variants_BR.g.vcf --variant cSol_04_raw_variants_BR.g.vcf --variant cSol_05_raw_variants_BR.g.vcf --variant cSol_06_raw_variants_BR.g.vcf --variant cSol_07_raw_variants_BR.g.vcf --variant cSol_08_raw_variants_BR.g.vcf --variant cSol_09_raw_variants_BR.g.vcf --variant cSol_10_raw_variants_BR.g.vcf --variant  stre_01_raw_variants.g.vcf --variant stre_02_raw_variants.g.vcf -O calc_and_stre_aug2.g.vcf 

java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar GenotypeGVCFs -R /data3/ASM165200v1_rename.fa --variant calc_and_stre.g.vcf -O calc_and_other_ceratina_gvcf.g.vcf --allow-old-rms-mapping-quality-annotation-data

java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar SelectVariants -R /data3/ASM165200v1_rename.fa -V calc_and_other_ceratina_gvcf.g.vcf --select-type SNP -O calc_and_other_ceratina_snp.vcf

java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar SelectVariants -R /data3/ASM165200v1_rename.fa -V calc_and_other_ceratina_gvcf.g.vcf --select-type INDEL -O calc_and_other_ceratina_indel.vcf

java -Xmx4g -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar VariantRecalibrator -R /data3/ASM165200v1_rename.fa -V calc_and_other_ceratina_snp.vcf -O calc_and_other_ceratina.recal --tranches-file calc_and_other_ceratina.tranches -resource:hapmap,known=false,training=true,truth=true,prior=15.0 CERATINA_SNP_TRAINING.vcf -an QD -an DP -an MQ -an MQRankSum -an FS -an ReadPosRankSum -an SOR -mode SNP

java -Xmx3g -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar ApplyVQSR -R /data3/ASM165200v1_rename.fa -V calc_and_other_ceratina_snp.vcf -O calc_and_other_ceratina_recalibrated_snp.vcf --truth-sensitivity-filter-level 90.0 --tranches-file calc_and_other_ceratina.tranches --recal-file calc_and_other_ceratina.recal -mode SNP


java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar VariantFiltration -R /data3/ASM165200v1_rename.fa -V calc_and_other_ceratina_snp.vcf --filter-expression "QD < 2.0" --filter-name "LowQD2" -O calc_and_other_ceratina_hardfiltered_1.vcf

java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar VariantFiltration -R /data3/ASM165200v1_rename.fa -V calc_and_other_ceratina_hardfiltered_1.vcf --filter-expression "MQ < 20.0" --filter-name "LowMQ20" -O calc_and_other_ceratina_hardfiltered_2.vcf

#issue with FS filtering, tried all at once 
java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar VariantFiltration -R /data3/ASM165200v1_rename.fa -V calc_and_other_ceratina_hardfiltered_2.vcf --filter-expression "FS > 60.0" --filter-name "FS60" -O calc_and_other_ceratina_hardfiltered_3.vcf

java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar VariantFiltration -R /data3/ASM165200v1_rename.fa -V calc_and_other_ceratina_hardfiltered_3.vcf --filter-expression "ReadPosRankSum < -8.0" --filter-name "RPRSlow" --filter-expression "ReadPosRankSum > 8.0" --filter-name "RPRShigh" -O calc_and_other_ceratina_hardfiltered_4.vcf

java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar VariantFiltration -R /data3/ASM165200v1_rename.fa -V calc_and_other_ceratina_hardfiltered_4.vcf --filter-expression "MQRankSum < -12.5" --filter-name "MQRSlow" --filter-expression "MQRankSum > 12.5" --filter-name "MQRShigh" -O calc_and_other_ceratina_hardfiltered_5.vcf

java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar VariantFiltration -R /data3/ASM165200v1_rename.fa -V calc_and_other_ceratina_hardfiltered_5.vcf --filter-expression "SOR > 3.0" --filter-name "SOR" -O calc_and_other_ceratina_hardfiltered_6.vcf

#min 5 reads per *22 samples , 1.5*IQR

java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar VariantFiltration -R /data3/ASM165200v1_rename.fa -V calc_and_other_ceratina_hardfiltered_6.vcf --filter-expression "DP < 110" --filter-name "DPlow" --filter-expression "DP > 462" --filter-name "DPhigh" -O calc_and_other_ceratina_hardfiltered_7.vcf

java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar VariantFiltration -R /data3/ASM165200v1_rename.fa -V calc_and_other_ceratina_hardfiltered_7.vcf --mask calc_and_other_ceratina_indel.vcf --mask-extension 5 --mask-name "Indel" -O calc_and_other_ceratina_noINDEL.vcf

#need to make new ambiguous sites file
#java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar VariantFiltration -R /data2/Training_set/HAV3.1_renamed.fa -V Soc_Sol_noINDEL.vcf --mask /data2/Training_set/brock_gatk_lofreq_ambiguous_sites_lifted_over.bed --mask-extension 5 --mask-name "CNV" -O Soc_Sol_noINDEL_noCNV.vcf

cat calc_and_other_ceratina_noINDEL.vcf | vcf-convert -v 4.1 > calc_and_other_ceratina_filter2.vcf 

awk -F '\t' '{if($0 ~ /\#/) print; else if (($7 == "LowMQ20") || ($7 == "LowQD2") || ($7 == "FS60") || ($7 == "RPRShigh") || ($7 == "MQRShigh") || ($7 == "SOR") || ($7 == "PASS") || ($7 == "VQSRTrancheSNP99.90to100.00") || ($7 == "VQSRTrancheSNP99.00to99.90") || ($7 == "DPlow") || ($7 == "DPhigh")) print}'  calc_and_other_ceratina_filter2.vcf > calc_and_other_ceratina_filter3.vcf

java -jar ./gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar SelectVariants -R /data3/ASM165200v1_rename.fa -V ceratina_other_filter_3.vcf -O c.strenua.vcf -sn stre_01 -sn stre_02

SNPEff---
java -Xmx4g -jar /data3/dova_nanuq_raw_data/snpEff/snpEff.jar -c /data3/dova_nanuq_raw_data/snpEff/snpEff.config -v ASM165200v1 calc_and_other_ceratina_filter3.vcf > calc_and_other_ceratina_filter3.ann.vcf
